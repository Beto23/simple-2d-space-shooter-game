(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var _1 = require("./game/");
var dibujarTexto_1 = require("./shared/dibujarTexto");
// Objetos importantes de canvas
var canvas = document.getElementById('main');
var ctx = canvas.getContext('2d');
console.log(ctx);
var naveObject = {
    x: 100,
    y: canvas.height - 70,
    width: 50,
    height: 50,
    contador: 0,
};
var textoRespuesta = {
    contador: -1,
    titulo: '',
    subtitulo: ''
};
var juego = {
    estado: 'iniciando'
};
//Definicion de variables para imagenes
var fondo;
var teclado = {};
window.disparos = [];
window.disparosEnemigos = [];
var nave = new _1.Nave(canvas, ctx, naveObject, teclado);
var enemigo = new _1.Enemigo(ctx, canvas);
//Definicion de funciones
function loadMedia() {
    fondo = new Image();
    fondo.src = './images/fondo.jpeg';
    fondo.onload = function () {
        var intervalo = window.setInterval(frameLoop, 1000 / 55);
    };
}
function dibujarFondo() {
    ctx.drawImage(fondo, 0, 0);
}
function actualizarEstadoJuego() {
    if (juego.estado === 'jugando' && enemigo.enemigos.length == 0) {
        juego.estado = 'victoria';
        textoRespuesta.titulo = 'Derrotaste a los enemigos';
        textoRespuesta.subtitulo = 'Presiona la tecla R para reiniciar';
        textoRespuesta.contador = 0;
    }
    textoRespuesta.contador >= 0 ? textoRespuesta.contador++ : null;
    if ((juego.estado === 'perdido' || juego.estado === 'victoria') && teclado[82]) {
        juego.estado = 'iniciando';
        nave.nave.estado = 'vivo';
        textoRespuesta.contador = -1;
    }
}
function frameLoop() {
    actualizarEstadoJuego();
    nave.moverNave(juego, textoRespuesta);
    enemigo.actualizaEnemigos(juego);
    nave.moverDisparos();
    enemigo.moverDisparosEnemigos();
    dibujarFondo();
    enemigo.dibujarEnemigos();
    enemigo.verificarGolpe();
    nave.verificarGolpe();
    enemigo.dibujarEnemigos();
    enemigo.dibujarDisparosEnemigos();
    nave.dibujarDisparos();
    dibujarTexto_1.dibujaTexto(ctx, textoRespuesta, juego, enemigo.enemigos);
    nave.dibujarNave();
}
//Ejecucion de funciones
_1.agregarEventosTeclado(teclado);
loadMedia();

},{"./game/":5,"./shared/dibujarTexto":6}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var golpear_1 = require("../shared/golpear");
var getNumeroAleatorio_1 = require("../shared/getNumeroAleatorio");
var Enemigo = /** @class */ (function () {
    function Enemigo(ctx, canvas) {
        this.enemigos = [];
        this.enemigo1 = document.getElementById("e1");
        this.enemigo2 = document.getElementById("e2");
        this.enemigo3 = document.getElementById("e3");
        this.ctx = ctx;
        this.canvas = canvas;
    }
    Enemigo.prototype.dibujarEnemigos = function () {
        var _this = this;
        this.enemigos.map(function (enemigo) {
            _this.ctx.save();
            enemigo.estado === 'vivo' ? _this.ctx.fillStyle = enemigo.type : null;
            enemigo.estado === 'muerto' ? _this.ctx.fillStyle = 'black' : null;
            _this.ctx.drawImage(enemigo.type, enemigo.x, enemigo.y, enemigo.width, enemigo.height);
            _this.ctx.restore();
        });
    };
    Enemigo.prototype.actualizaEnemigos = function (juego) {
        function agregarDisparosEnemigos(enemigo) {
            return {
                x: enemigo.x,
                y: enemigo.y,
                width: 10,
                height: 33,
                contador: 0
            };
        }
        // crear enemigos
        if (juego.estado === 'iniciando') {
            for (var i = 0; i < 10; i++) {
                var tipoEnemigo = this.enemigo1;
                if (i >= 0 && i <= 3) {
                    tipoEnemigo = this.enemigo2;
                }
                else if (i > 3 && i <= 6) {
                    tipoEnemigo = this.enemigo3;
                }
                this.enemigos.push({
                    x: 10 + (i * 50),
                    y: 10,
                    height: 40,
                    width: 40,
                    estado: 'vivo',
                    contador: 0,
                    type: tipoEnemigo
                });
            }
            juego.estado = 'jugando';
        }
        for (var i in this.enemigos) {
            var enemigo = this.enemigos[i];
            if (!enemigo)
                continue;
            if (enemigo && enemigo.estado === 'vivo') {
                enemigo.contador++;
                enemigo.x += Math.sin(enemigo.contador * Math.PI / 90) * 5;
                if (getNumeroAleatorio_1.aleatorio(0, this.enemigos.length * 10) === 4) {
                    window.disparosEnemigos.push(agregarDisparosEnemigos(enemigo));
                }
            }
            //Eliminar enemigos
            if (enemigo && enemigo.estado == 'golpeado') {
                enemigo.contador++;
                if (enemigo.contador >= 2) {
                    enemigo.estado = 'muerto';
                    enemigo.contador = 0;
                }
            }
            this.enemigos = this.enemigos.filter(function (enemigo) {
                if (enemigo && enemigo.estado != 'muerto')
                    return true;
                return false;
            });
        }
    };
    Enemigo.prototype.verificarGolpe = function () {
        var _this = this;
        window.disparos.map(function (disparo) {
            _this.enemigos.map(function (enemigo) {
                if (golpear_1.golpear(disparo, enemigo)) {
                    enemigo.estado = 'golpeado';
                    enemigo.contador = 0;
                }
            });
        });
    };
    // Disparos
    Enemigo.prototype.dibujarDisparosEnemigos = function () {
        var _this = this;
        window.disparosEnemigos.map(function (disparo) {
            _this.ctx.save();
            _this.ctx.fillStyle = 'yellow';
            _this.ctx.fillRect(disparo.x, disparo.y, disparo.width, disparo.height);
            _this.ctx.restore();
        });
    };
    Enemigo.prototype.moverDisparosEnemigos = function () {
        var _this = this;
        window.disparosEnemigos.map(function (disparo) {
            disparo.y += 3;
        });
        window.disparosEnemigos = window.disparosEnemigos
            .filter(function (disparo) {
            return disparo.y < _this.canvas.height;
        });
    };
    return Enemigo;
}());
exports.Enemigo = Enemigo;

},{"../shared/getNumeroAleatorio":7,"../shared/golpear":8}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var golpear_1 = require("../shared/golpear");
var Nave = /** @class */ (function () {
    function Nave(canvas, ctx, nave, teclado) {
        this.naveEspacial = document.getElementById("nave");
        this.nave = nave;
        this.ctx = ctx;
        this.teclado = teclado;
        this.canvas = canvas;
    }
    Nave.prototype.dibujarNave = function () {
        this.ctx.save();
        this.ctx.fillStyle = 'white';
        this.ctx.drawImage(this.naveEspacial, this.nave.x, this.nave.y, this.nave.width, this.nave.height);
        this.ctx.restore();
    };
    Nave.prototype.moverNave = function (juego, textoRespuesta) {
        if (this.teclado[37]) {
            // Movimiento a la izquierda, disminuye x
            this.nave.x -= 6;
            if (this.nave.x < 0)
                this.nave.x = 0; // limite de nave en x lado izquierdo
        }
        if (this.teclado[39]) {
            // Movimiento a la derecha, aumenta x
            var limite = this.canvas.width - this.nave.width; // limite de nave en x lado derecho
            this.nave.x += 6;
            if (this.nave.x > limite)
                this.nave.x = limite;
        }
        if (this.teclado[32]) {
            //Disparos
            if (!this.teclado.fire) {
                this.fire();
                this.teclado.fire = true;
            }
        }
        else
            this.teclado.fire = false;
        if (this.nave.estado === 'golpeado') {
            this.nave.contador++;
            if (this.nave.contador >= 20) {
                this.nave.contador = 0;
                this.nave.estado = 'muerto';
                juego.estado = 'perdido';
                textoRespuesta.titulo = 'Game Over';
                textoRespuesta.subtitulo = 'Presiona la tecla R para continuar';
                textoRespuesta.contador = 0;
            }
        }
    };
    //Disparos
    Nave.prototype.moverDisparos = function () {
        window.disparos.map(function (disparo) {
            disparo.y -= 2;
        });
        //Elimina disparo en posicion 0 en y
        window.disparos = window.disparos.filter(function (disparo) {
            return disparo.y > 0;
        });
    };
    Nave.prototype.dibujarDisparos = function () {
        var _this = this;
        this.ctx.save();
        this.ctx.fillStyle = 'white';
        window.disparos.map(function (disparo) {
            _this.ctx.fillRect(disparo.x, disparo.y, disparo.width, disparo.height);
        });
        this.ctx.restore();
    };
    Nave.prototype.verificarGolpe = function () {
        var _this = this;
        if (this.nave.estado === "golpeado" || this.nave.estado === "muerto")
            return;
        window.disparosEnemigos.map(function (disparo) {
            if (golpear_1.golpear(disparo, _this.nave)) {
                _this.nave.estado = 'golpeado';
                console.log('contacto');
            }
        });
    };
    Nave.prototype.fire = function () {
        window.disparos.push({
            x: this.nave.x + 20,
            y: this.nave.y - 10,
            width: 10,
            height: 30
        });
    };
    return Nave;
}());
exports.Nave = Nave;

},{"../shared/golpear":8}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function agregarEventosTeclado(teclado) {
    agregarEvento(document, 'keydown', function (e) {
        //ponemos en true la tecla presionada
        teclado[e.keyCode] = true;
    });
    agregarEvento(document, 'keyup', function (e) {
        //ponemos en false la tecla que dejo de ser presionada
        teclado[e.keyCode] = false;
    });
    function agregarEvento(elemento, nombreEvento, f) {
        if (elemento.addEventListener) {
            elemento.addEventListener(nombreEvento, f, false);
        }
        else if (elemento.attachEvent) {
            // internet Explorer
            elemento.attachEvent(nombreEvento, f);
        }
    }
}
exports.agregarEventosTeclado = agregarEventosTeclado;

},{}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Nave_1 = require("./Nave");
exports.Nave = Nave_1.Nave;
var eventosTeclado_1 = require("./eventosTeclado");
exports.agregarEventosTeclado = eventosTeclado_1.agregarEventosTeclado;
var Enemigo_1 = require("./Enemigo");
exports.Enemigo = Enemigo_1.Enemigo;

},{"./Enemigo":2,"./Nave":3,"./eventosTeclado":4}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function dibujaTexto(ctx, textoRespuesta, juego, enemigos) {
    if (textoRespuesta.contador === -1)
        return;
    var alpha = textoRespuesta.contador / 50.0;
    if (alpha > 1) {
        for (var i in enemigos) {
            delete enemigos[i];
        }
    }
    ctx.save();
    ctx.globalAlpha = alpha;
    if (juego.estado === 'perdido') {
        ctx.fillStyle = 'white';
        ctx.font = 'Bold 40pt Arial';
        ctx.fillText(textoRespuesta.titulo, 140, 200);
        ctx.font = '14pt Arial';
        ctx.fillText(textoRespuesta.subtitulo, 190, 250);
    }
    if (juego.estado === 'victoria') {
        ctx.fillStyle = 'white';
        ctx.font = 'Bold 40pt Arial';
        ctx.fillText(textoRespuesta.titulo, 140, 200);
        ctx.font = '14pt Arial';
        ctx.fillText(textoRespuesta.subtitulo, 190, 250);
    }
}
exports.dibujaTexto = dibujaTexto;

},{}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function aleatorio(inferior, superior) {
    var posibilidades = superior - inferior;
    var aleatorio = Math.random() * posibilidades;
    aleatorio = Math.floor(aleatorio);
    return parseInt(inferior) + aleatorio;
}
exports.aleatorio = aleatorio;

},{}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function golpear(a, b) {
    var golpear = false;
    if (b.x + b.width >= a.x && b.x < a.x + a.width) {
        if (b.y + b.height >= a.y && b.y < a.y + a.height) {
            golpear = true;
        }
    }
    if (b.x <= a.x && b.x + b.width >= a.x + a.width) {
        if (b.y <= a.y && b.y + b.height >= a.y + a.height) {
            golpear = true;
        }
    }
    if (a.x <= b.x && a.x + a.width >= b.x + b.width) {
        if (a.y <= b.y && a.y + a.height >= b.y + b.height) {
            golpear = true;
        }
    }
    return golpear;
}
exports.golpear = golpear;

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
